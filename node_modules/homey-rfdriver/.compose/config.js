'use strict';

module.exports = {
	generic: {
		imitate: {
			version: '1.0.2',
			template: './generic/imitate.html',
			options: {
				navigation: {
					prev: true,
					next: false,
				},
			},
			locales: {
				en: {
					generator: {
						pair: {

						},
					},
				},
				nl: {
					generator: {

					},
				},
			},
		},
		choice: {
			version: '1.0.1',
			template: './generic/choice.html',
			options: {
				navigation: {
					prev: true,
					next: false,
				},
			},
			locales: {
				en: {
					generator: {
						pair: {

						},
					},
				},
				nl: {
					generator: {
						pair: {

						},
					},
				},
			},
		},
		done: {
			version: '1.0.2',
			template: './generic/done.html',
			locales: {
				en: {
					generator: {
						pair: {

						},
					},
				},
				nl: {
					generator: {
						pair: {

						},
					},
				},
			},
		},
		info: {
			version: '1.0.0',
			template: './generic/info.html',
			options: {
				navigation: {
					prev: true,
					next: true,
				},
			},
			locales: {
				en: {
					generator: {
						pair: {

						},
					},
				},
				nl: {
					generator: {
						pair: {

						},
					},
				},
			},
		},
		program: {
			version: '1.0.2',
			template: './generic/program.html',
			options: {
				navigation: {
					prev: true,
					next: false,
				},
			},
			locales: {
				en: {
					generator: {
						pair: {

						},
					},
				},
				nl: {
					generator: {
						pair: {

						},
					},
				},
			},
		},
		test: {
			version: '1.0.0',
			template: './generic/test.html',
			options: {
				navigation: {
					prev: true,
					next: true,
				},
			},
			locales: {
				en: {
				},
				nl: {
					generator: {
						pair: {

						},
						settings: (device) => (device.settings || [])
							.reduce((res, obj) => res.concat((obj.type === 'group' ? obj.children : obj) || []), [])
							.some(setting => setting.id === 'rotated') ? ({

						}) : {},
					},
				},
			},
		},
		test_button: {
			extends: 'test',
			version: '1.0.0',
			template: './generic/test_button.html',
		},
		test_switch: {
			extends: 'test',
			version: '1.1.0',
			template: './generic/test_switch.html',
		},
	},
	ir: {
		model_select: {
			version: '0.1.1',
			template: './ir/model_select.html',
			options: {
				navigation: {
					prev: true,
					next: false,
				},
			},
		},
	},
	433: {
		codewheel: {
			version: '1.0.0',
			template: './433/codewheel.html',
			options: {
				navigation: {
					prev: true,
					next: true,
				},
			},
			locales: {
				en: {
					generator: {
						pair: {

						},
					},
				},
				nl: {
					generator: {
						pair: {

						},
					},
				},
			},
		},
		dipswitch: {
			version: '1.0.2',
			template: './433/dipswitch.html',
			options: {
				navigation: {
					prev: true,
					next: false,
				},
			},
			locales: {
				en: {
					generator: {
						pair: {

						},
					},
				},
				nl: {
					generator: {
						pair: {

						},
					},
				},
			},
		},
	},
	868: {},
};
